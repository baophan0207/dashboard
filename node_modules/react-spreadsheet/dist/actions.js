import { createAction } from "@reduxjs/toolkit";
export var setData = createAction("SET_DATA", function (data) { return ({ payload: { data: data } }); });
export var select = createAction("SELECT", function (point) { return ({ payload: { point: point } }); });
export var activate = createAction("ACTIVATE", function (point) { return ({ payload: { point: point } }); });
export var setCellData = createAction("SET_CELL_DATA", function (active, data, getBindingsForCell) { return ({
    payload: { active: active, data: data, getBindingsForCell: getBindingsForCell }
}); });
export var setCellDimensions = createAction("SET_CELL_DIMENSIONS", function (point, dimensions) { return ({
    payload: { point: point, dimensions: dimensions }
}); });
export var copy = createAction("COPY");
export var cut = createAction("CUT");
export var paste = createAction("PASTE", function (data) { return ({ payload: { data: data } }); });
export var edit = createAction("EDIT");
export var view = createAction("VIEW");
export var clear = createAction("CLEAR");
export var blur = createAction("BLUR");
export var keyPress = createAction("KEY_PRESS", function (event) { return ({ payload: { event: event } }); });
export var keyDown = createAction("KEY_DOWN", function (event) { return ({ payload: { event: event } }); });
export var dragStart = createAction("DRAG_START");
export var dragEnd = createAction("DRAG_END");
export var commit = createAction("COMMIT", function (changes) { return ({ payload: { changes: changes } }); });
