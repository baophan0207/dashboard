var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from "react";
import { moveCursorToEnd } from "./util";
/** The default Spreadsheet DataEditor component */
var DataEditor = function (_a) {
    var _b;
    var onChange = _a.onChange, cell = _a.cell;
    var inputRef = React.useRef(null);
    var handleChange = React.useCallback(function (event) {
        onChange(__assign(__assign({}, cell), { value: event.target.value }));
    }, [onChange, cell]);
    React.useEffect(function () {
        if (inputRef.current) {
            moveCursorToEnd(inputRef.current);
        }
    }, [inputRef]);
    var value = (_b = cell === null || cell === void 0 ? void 0 : cell.value) !== null && _b !== void 0 ? _b : "";
    return (React.createElement("div", { className: "Spreadsheet__data-editor" },
        React.createElement("input", { ref: inputRef, type: "text", onChange: handleChange, value: value, autoFocus: true })));
};
export default DataEditor;
