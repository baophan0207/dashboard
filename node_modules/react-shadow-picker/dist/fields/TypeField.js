var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React from "react";
import styled from "styled-components";
import { Label } from "../inputs/Label";
var Wrapper = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\tflex: 1;\n\tdisplay: flex;\n"], ["\n\tflex: 1;\n\tdisplay: flex;\n"])));
var Group = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n\tdisplay: flex;\n\twidth: 170px;\n\tmargin: 0 0 0 auto;\n"], ["\n\tdisplay: flex;\n\twidth: 170px;\n\tmargin: 0 0 0 auto;\n"])));
var Button = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n\tborder: 1px solid #555a;\n\tbackground: ", ";\n\tcursor: pointer;\n\twidth: 50%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbox-sizing: border-box;\n\tmargin: 0.5em 0;\n"], ["\n\tborder: 1px solid #555a;\n\tbackground: ", ";\n\tcursor: pointer;\n\twidth: 50%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbox-sizing: border-box;\n\tmargin: 0.5em 0;\n"])), function (p) { return (p.active ? "#4285F4" : "transparent"); });
var ButtonOut = styled(Button)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n\tborder-radius: 2px 0 0 2px;\n"], ["\n\tborder-radius: 2px 0 0 2px;\n"])));
var ButtonIn = styled(Button)(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n\tborder-radius: 0 2px 2px 0;\n"], ["\n\tborder-radius: 0 2px 2px 0;\n"])));
export default (function (_a) {
    var value = _a.value, onChange = _a.onChange;
    return (React.createElement(Wrapper, null,
        React.createElement(Label, null, "Type"),
        React.createElement(Group, null,
            React.createElement(ButtonOut, { className: "shadow-picker__position " +
                    (value === "outside" ? "active" : ""), active: value === "outside", onClick: function () { return onChange("outside"); } }, "Outside"),
            React.createElement(ButtonIn, { className: "shadow-picker__position " +
                    (value === "inside" ? "active" : ""), active: value === "inside", onClick: function () { return onChange("inside"); } }, "Inside"))));
});
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
//# sourceMappingURL=TypeField.js.map