var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React, { useEffect, useState } from "react";
import styled from "styled-components";
var Input = styled.input(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\tbackground: transparent;\n\tcolor: inherit;\n\tborder: 1px solid #555a;\n\tborder-radius: 2px;\n\twidth: 60px;\n\theight: 28px;\n\tmargin: 0 8px;\n\tbox-sizing: border-box;\n\t//flex: 1;\n\ttext-align: right;\n"], ["\n\tbackground: transparent;\n\tcolor: inherit;\n\tborder: 1px solid #555a;\n\tborder-radius: 2px;\n\twidth: 60px;\n\theight: 28px;\n\tmargin: 0 8px;\n\tbox-sizing: border-box;\n\t//flex: 1;\n\ttext-align: right;\n"])));
export default (function (_a) {
    var value = _a.value, onChange = _a.onChange;
    var _b = useState(value), tmp = _b[0], setTmp = _b[1];
    var _c = useState(false), active = _c[0], setActive = _c[1];
    useEffect(function () {
        if (!active)
            setTmp(value);
    }, [value]);
    var changed = function (e) {
        setTmp(e.target.value);
        onChange(e.target.value);
    };
    var blur = function () {
        setActive(false);
        if (/(-?\d+)((r?em)|(px)|\%)$/.test(tmp))
            onChange(tmp);
    };
    return (React.createElement(Input, { className: "shadow-picker__input", value: tmp, onFocus: function () { return setActive(true); }, onBlur: blur, onChange: changed }));
});
var templateObject_1;
//# sourceMappingURL=Input.js.map