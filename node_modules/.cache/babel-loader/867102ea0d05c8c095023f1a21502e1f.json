{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\dashboard\\\\src\\\\assets\\\\components\\\\PopupComponents\\\\BasicComponents\\\\PopupTable\\\\MyTable.js\";\nimport React from 'react';\nimport './StyleSheet.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport { FTOFeatureListHeader } from './TableProps';\nimport { FTOFeatureData } from './DefaultProps';\nimport PropTypes from 'prop-types';\nimport { SimpleToggle } from '../../../CommonComponents/SimpleToggle/SimpleToggle';\nimport { getMenuIconClass, getSerialRowNumber, isValidData } from '../CommonMethods';\nimport Icon from '../../../../IconLibrary/Icon';\nimport DuoIcon from '../../../../IconLibrary/DuoIcon';\n// import MyCheckbox from \"../BasicComponents/Checkbox/MyCheckbox\";\nimport { AssigneeList, ComparisonInputs, CPCList, FamilyApplicantList, InfringedFeatureList, LegalStatus, PatentInfoWithCondition, PatentList, RelevantPatentInfo, SimilarityScore, SimpleList, PatentLink } from './CustomTableCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst autoSizeStrategy = {\n  type: 'fitGridWidth',\n  defaultMinWidth: 100\n};\nexport default class MyTable extends React.Component {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    this.prepareData = function (Headers) {\n      let actionList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let onAction = arguments.length > 2 ? arguments[2] : undefined;\n      let onChange = arguments.length > 3 ? arguments[3] : undefined;\n      let onViewDetails = arguments.length > 4 ? arguments[4] : undefined;\n      let selectAllInfo = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n      let pendingLoading = arguments.length > 6 ? arguments[6] : undefined;\n      let pendingHeaders = arguments.length > 7 ? arguments[7] : undefined;\n      let headerArr = [];\n      for (let i = 0; i < Headers.length; i++) {\n        let dataLoading = false;\n        if (pendingLoading === true && pendingHeaders.includes(Headers[i].Key)) {\n          dataLoading = true;\n        }\n        let DesignProps = Headers[i].Design;\n        let newHeaderInfo = {\n          headerName: Headers[i].DisplayName,\n          field: Headers[i].Key,\n          sortable: Headers[i].Type === 'text',\n          filter: Headers[i].Type === 'text' ? 'agSetColumnFilter' : '',\n          pinned: DesignProps.Pinned,\n          lockPinned: DesignProps.LockPinned,\n          flex: DesignProps.Flex,\n          minWidth: DesignProps.MinWidth,\n          maxWidth: DesignProps.MaxWidth === 'auto' ? 1200 : DesignProps.MaxWidth,\n          wrapText: true,\n          resizable: DesignProps.Resizable,\n          cellEditor: 'agCheckboxCellEditor',\n          checkboxSelection: DesignProps.Selectable,\n          showDisabledCheckboxes: true,\n          enableSorting: Headers[i].Type === 'text',\n          cellRenderer:\n          // Headers[i].Type === \"checkbox\" ? \"agCheckboxCellRenderer\" :\n          dataLoading === true ? AnyGenLoadingCell : Headers[i].Type === 'checkbox' ? CheckboxCell : Headers[i].Type === 'action' ? ActionCell : Headers[i].Type === 'toggle' ? ToggleButtonCell : Headers[i].Type === 'text' ? AnyGenTableCell : Headers[i].Type === 'number' ? AnyGenTableNumberCell : Headers[i].Type === 'custom' ? params => AnyGenTableCustomCell(params, onViewDetails) : StatusCell,\n          cellRendererParams: {\n            maxCellHeight: _this.props.maxCellHeight,\n            onAction: Headers[i].Type === 'checkbox' ? onChange : onAction,\n            actionList: actionList,\n            customCell: DesignProps.CustomCellDesign,\n            checkbox: DesignProps.Selectable,\n            parentFunction: isValidData(DesignProps.ParentFunctionName) ? _this.props[DesignProps.ParentFunctionName] : () => {}\n          }\n          // headerComponent: Headers[i].Key === \"checkbox\"?CheckboxCell:AnyGenHeaderCell,\n        };\n        if (Headers[i].Type === 'checkbox') {\n          newHeaderInfo.headerComponent = HeaderCheckboxCell;\n          newHeaderInfo.headerComponentParams = selectAllInfo;\n        } else if (Headers[i].Key === 'no') {\n          let pageNumber = 1;\n          let pageSize = _this.props.Data.length;\n          newHeaderInfo.valueGetter = params => {\n            if (isValidData(pageNumber) && isValidData(pageSize)) {\n              return getSerialRowNumber(pageNumber, pageSize, params.node.rowIndex);\n            } else {\n              return params.node.rowIndex + 1;\n            }\n          };\n        }\n        headerArr.push(newHeaderInfo);\n      }\n      _this.setState({\n        columnDefs: headerArr\n      });\n    };\n    this.prepareTableHeight = () => {\n      let {\n        cellHeight\n      } = this.props;\n      let tableContainerHeight = this.tableContainerRef.current.clientHeight;\n      let heightType; // autoHeight, manualHeight, fixedHeight\n      let tableRowHeight = cellHeight;\n      let tableHeaderHeight = 50; //55.78\n      let minHeight = 400; // 150 + 56\n      let dataHeight = this.props.Data.length * tableRowHeight + tableHeaderHeight;\n      if (dataHeight < minHeight) {\n        heightType = 'manualHeight';\n        this.setState({\n          tableHeight: dataHeight,\n          heightType\n        });\n      } else {\n        heightType = 'fixedHeight';\n        this.setState({\n          tableHeight: tableContainerHeight > 0 ? tableContainerHeight : 400,\n          heightType\n        });\n      }\n    };\n    this.tableContainerRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      columnDefs: [],\n      rowData: [],\n      defaultColDef: {\n        flex: 1,\n        wrapText: true,\n        autoHeight: true,\n        maxHeight: 40,\n        pinned: 'right',\n        enableRenameColumns: true\n\n        // cellRenderer:AnyGenTableCell,\n        // cellRendererParams : {\n        //     maxCellHeight: this.props.maxCellHeight\n        // },\n      }\n    };\n  }\n  componentDidMount() {\n    let {\n      Headers,\n      actionList,\n      onAction,\n      onChange,\n      onViewDetails,\n      selectAllInfo = {},\n      pendingLoading = false,\n      pendingHeaders = []\n    } = this.props;\n    this.prepareData(Headers, actionList, onAction, onChange, onViewDetails, selectAllInfo, pendingLoading, pendingHeaders);\n    this.prepareTableHeight();\n  }\n  componentWillReceiveProps(nextProps, nextContext) {\n    let {\n      Headers,\n      actionList,\n      onAction,\n      onChange,\n      onViewDetails,\n      selectAllInfo = {},\n      pendingLoading = false,\n      pendingHeaders = []\n    } = nextProps;\n    this.prepareData(Headers, actionList, onAction, onChange, onViewDetails, selectAllInfo, pendingLoading, pendingHeaders);\n    this.prepareTableHeight();\n  }\n  render() {\n    let {\n      autoHeight,\n      tableHeight\n    } = this.state;\n    let {\n      noShadow\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: noShadow ? 'default-table-container no-shadow' : 'default-table-container',\n      ref: this.tableContainerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ag-theme-quartz\",\n        style: {\n          width: '100%',\n          height: tableHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          suppressRowClickSelection: false // for row selection\n          ,\n          suppressCellFocus: true // for column color (selection)\n          ,\n          domLayout: autoHeight ? 'autoHeight' : 'normal',\n          defaultColDef: this.state.defaultColDef,\n          columnDefs: this.state.columnDefs,\n          rowClass: 'my-table-row',\n          autoSizeStrategy: autoSizeStrategy,\n          rowSelection: 'multiple',\n          rowData: this.props.Data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst AnyGenTableCell = params => {\n  let textValue = params.value;\n  if (!textValue) {\n    if (params.colDef['field'] === 'Abstract') {\n      textValue = params.data['Snippet'];\n    } else {\n      textValue = '-';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col\",\n      style: {\n        maxHeight: params.maxCellHeight,\n        padding: params.checkbox ? '5px 15px 5px 10px' : '5px 15px'\n      },\n      children: textValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this);\n};\n_c = AnyGenTableCell;\nconst AnyGenTableNumberCell = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col number-col\",\n      style: {\n        maxHeight: params.maxCellHeight,\n        padding: params.checkbox ? '5px 15px 5px 10px' : '5px 15px'\n      },\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 9\n  }, this);\n};\n_c2 = AnyGenTableNumberCell;\nconst AnyGenLoadingCell = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-loading-cell\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 9\n  }, this);\n};\n_c3 = AnyGenLoadingCell;\nconst AnyGenTableCustomCell = params => {\n  // console.log(\"At Fun \",params.customCell, \", \", typeof params.parentFunction, \", \", params.parentFunction)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col\",\n      style: {\n        maxHeight: params.maxCellHeight,\n        padding: params.checkbox ? '5px 15px 5px 10px' : '5px 15px'\n      },\n      children: params.customCell === 'Simple List' ? SimpleList(params.value) : params.customCell === 'Family Applicants' || params.customCell === 'Family Inventors' ? FamilyApplicantList(params.value) : params.customCell === 'Comparison History' ? ComparisonInputs(params.value) : params.customCell === 'Patent List' ? PatentList(params.value) : params.customCell === 'CPC List' ? CPCList(params.value) : params.customCell === 'Assignee List' ? AssigneeList(params.value) : params.customCell === 'Legal Status' ? LegalStatus(params.value) : params.customCell === 'Similarity Score' ? SimilarityScore(params.value) : params.customCell === 'Infringed Feature List' ? InfringedFeatureList(params.value) : params.customCell === 'Relevant Patent Info' ? RelevantPatentInfo(params.value) : params.customCell === 'Patent Info With condition' ? PatentInfoWithCondition(params.value) : params.customCell === 'Patent Link' ? PatentLink(params.value) : params.customCell === 'Patent Link' ? PatentLink(params.value) : params.customCell === 'parent function' ? params.parentFunction(params) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 9\n  }, this);\n};\n_c4 = AnyGenTableCustomCell;\nconst HeaderCheckboxCell = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col header-checkbox-col\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 9\n  }, this);\n};\n_c5 = HeaderCheckboxCell;\nconst CheckboxCell = params => {\n  let isSelected = params.data['isSelected'] === true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col checkbox-col\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 9\n  }, this);\n};\n_c6 = CheckboxCell;\nconst ToggleButtonCell = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col center-col\",\n      style: {\n        maxHeight: params.maxCellHeight\n      },\n      children: /*#__PURE__*/_jsxDEV(SimpleToggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 9\n  }, this);\n};\n_c7 = ToggleButtonCell;\nconst ActionCell = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-cell\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-cell-list\",\n        children: params.actionList.map((actionInfo, aid) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: getMenuIconClass(actionInfo.Icon.Name, false),\n          onClick: params.onAction,\n          children: actionInfo.Icon.IconType === 'Single' ? /*#__PURE__*/_jsxDEV(Icon, {\n            icon: actionInfo.Icon.Name,\n            size: 14,\n            title: actionInfo.Name,\n            fillRule: 'evenodd'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(DuoIcon, {\n            name: actionInfo.Icon.Name,\n            size: 14,\n            title: actionInfo.Name,\n            fillRule: 'evenodd'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 33\n          }, this)\n        }, aid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 9\n  }, this);\n};\n_c8 = ActionCell;\nexport const StatusCell = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-status-type\",\n    children: \"In progress\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 12\n  }, this);\n};\n_c9 = StatusCell;\nMyTable.defaultProps = {\n  Headers: FTOFeatureListHeader,\n  Data: FTOFeatureData,\n  autoHeight: false,\n  maxCellHeight: 200,\n  // cell inner content's maximum scroll\n  cellHeight: 50,\n  // cell height for calculating table height >> Normally should be bigger than maxCellHeight + 21\n  noShadow: false,\n  viewPatentInfo: false,\n  showIDTooltip: true,\n  tableHeight: '100%'\n};\nMyTable.propTypes = {\n  Headers: PropTypes.array.isRequired,\n  Data: PropTypes.array.isRequired,\n  autoHeight: PropTypes.bool,\n  maxCellHeight: PropTypes.number,\n  cellHeight: PropTypes.number,\n  noShadow: PropTypes.bool,\n  viewPatentInfo: PropTypes.bool,\n  showIDTooltip: PropTypes.bool,\n  tableHeight: PropTypes.string,\n  actionList: PropTypes.array,\n  onAction: PropTypes.func\n};\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"AnyGenTableCell\");\n$RefreshReg$(_c2, \"AnyGenTableNumberCell\");\n$RefreshReg$(_c3, \"AnyGenLoadingCell\");\n$RefreshReg$(_c4, \"AnyGenTableCustomCell\");\n$RefreshReg$(_c5, \"HeaderCheckboxCell\");\n$RefreshReg$(_c6, \"CheckboxCell\");\n$RefreshReg$(_c7, \"ToggleButtonCell\");\n$RefreshReg$(_c8, \"ActionCell\");\n$RefreshReg$(_c9, \"StatusCell\");","map":{"version":3,"names":["React","AgGridReact","FTOFeatureListHeader","FTOFeatureData","PropTypes","SimpleToggle","getMenuIconClass","getSerialRowNumber","isValidData","Icon","DuoIcon","AssigneeList","ComparisonInputs","CPCList","FamilyApplicantList","InfringedFeatureList","LegalStatus","PatentInfoWithCondition","PatentList","RelevantPatentInfo","SimilarityScore","SimpleList","PatentLink","jsxDEV","_jsxDEV","autoSizeStrategy","type","defaultMinWidth","MyTable","Component","constructor","props","_this","this","prepareData","Headers","actionList","arguments","length","undefined","onAction","onChange","onViewDetails","selectAllInfo","pendingLoading","pendingHeaders","headerArr","i","dataLoading","includes","Key","DesignProps","Design","newHeaderInfo","headerName","DisplayName","field","sortable","Type","filter","pinned","Pinned","lockPinned","LockPinned","flex","Flex","minWidth","MinWidth","maxWidth","MaxWidth","wrapText","resizable","Resizable","cellEditor","checkboxSelection","Selectable","showDisabledCheckboxes","enableSorting","cellRenderer","AnyGenLoadingCell","CheckboxCell","ActionCell","ToggleButtonCell","AnyGenTableCell","AnyGenTableNumberCell","params","AnyGenTableCustomCell","StatusCell","cellRendererParams","maxCellHeight","customCell","CustomCellDesign","checkbox","parentFunction","ParentFunctionName","headerComponent","HeaderCheckboxCell","headerComponentParams","pageNumber","pageSize","Data","valueGetter","node","rowIndex","push","setState","columnDefs","prepareTableHeight","cellHeight","tableContainerHeight","tableContainerRef","current","clientHeight","heightType","tableRowHeight","tableHeaderHeight","minHeight","dataHeight","tableHeight","createRef","state","rowData","defaultColDef","autoHeight","maxHeight","enableRenameColumns","componentDidMount","componentWillReceiveProps","nextProps","nextContext","render","noShadow","className","ref","children","style","width","height","suppressRowClickSelection","suppressCellFocus","domLayout","rowClass","rowSelection","fileName","_jsxFileName","lineNumber","columnNumber","textValue","value","colDef","data","padding","_c","_c2","_c3","_c4","_c5","isSelected","_c6","_c7","map","actionInfo","aid","Name","onClick","IconType","icon","size","title","fillRule","name","_c8","_c9","defaultProps","viewPatentInfo","showIDTooltip","propTypes","array","isRequired","bool","number","string","func","$RefreshReg$"],"sources":["D:/Task/dashboard/src/assets/components/PopupComponents/BasicComponents/PopupTable/MyTable.js"],"sourcesContent":["import React from 'react'\nimport './StyleSheet.css'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/styles/ag-grid.css'\nimport 'ag-grid-community/styles/ag-theme-quartz.css'\nimport { FTOFeatureListHeader } from './TableProps'\nimport { FTOFeatureData } from './DefaultProps'\nimport PropTypes from 'prop-types'\nimport { SimpleToggle } from '../../../CommonComponents/SimpleToggle/SimpleToggle'\nimport {\n    getMenuIconClass,\n    getSerialRowNumber,\n    isValidData,\n} from '../CommonMethods'\nimport Icon from '../../../../IconLibrary/Icon'\nimport DuoIcon from '../../../../IconLibrary/DuoIcon'\n// import MyCheckbox from \"../BasicComponents/Checkbox/MyCheckbox\";\nimport {\n    AssigneeList,\n    ComparisonInputs,\n    CPCList,\n    FamilyApplicantList,\n    InfringedFeatureList,\n    LegalStatus,\n    PatentInfoWithCondition,\n    PatentList,\n    RelevantPatentInfo,\n    SimilarityScore,\n    SimpleList,\n    PatentLink,\n} from './CustomTableCell'\n\nconst autoSizeStrategy = {\n    type: 'fitGridWidth',\n    defaultMinWidth: 100,\n}\n\nexport default class MyTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableContainerRef = React.createRef()\n        this.state = {\n            columnDefs: [],\n            rowData: [],\n            defaultColDef: {\n                flex: 1,\n                wrapText: true,\n                autoHeight: true,\n                maxHeight: 40,\n                pinned: 'right',\n                enableRenameColumns: true,\n\n                // cellRenderer:AnyGenTableCell,\n                // cellRendererParams : {\n                //     maxCellHeight: this.props.maxCellHeight\n                // },\n            },\n        }\n    }\n\n    componentDidMount() {\n        let {\n            Headers,\n            actionList,\n            onAction,\n            onChange,\n            onViewDetails,\n            selectAllInfo = {},\n            pendingLoading = false,\n            pendingHeaders = [],\n        } = this.props\n        this.prepareData(\n            Headers,\n            actionList,\n            onAction,\n            onChange,\n            onViewDetails,\n            selectAllInfo,\n            pendingLoading,\n            pendingHeaders\n        )\n        this.prepareTableHeight()\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        let {\n            Headers,\n            actionList,\n            onAction,\n            onChange,\n            onViewDetails,\n            selectAllInfo = {},\n            pendingLoading = false,\n            pendingHeaders = [],\n        } = nextProps\n        this.prepareData(\n            Headers,\n            actionList,\n            onAction,\n            onChange,\n            onViewDetails,\n            selectAllInfo,\n            pendingLoading,\n            pendingHeaders\n        )\n        this.prepareTableHeight()\n    }\n\n    prepareData = (\n        Headers,\n        actionList = [],\n        onAction,\n        onChange,\n        onViewDetails,\n        selectAllInfo = {},\n        pendingLoading,\n        pendingHeaders\n    ) => {\n        let headerArr = []\n        for (let i = 0; i < Headers.length; i++) {\n            let dataLoading = false\n            if (\n                pendingLoading === true &&\n                pendingHeaders.includes(Headers[i].Key)\n            ) {\n                dataLoading = true\n            }\n            let DesignProps = Headers[i].Design\n            let newHeaderInfo = {\n                headerName: Headers[i].DisplayName,\n                field: Headers[i].Key,\n                sortable: Headers[i].Type === 'text',\n                filter: Headers[i].Type === 'text' ? 'agSetColumnFilter' : '',\n                pinned: DesignProps.Pinned,\n                lockPinned: DesignProps.LockPinned,\n                flex: DesignProps.Flex,\n                minWidth: DesignProps.MinWidth,\n                maxWidth:\n                    DesignProps.MaxWidth === 'auto'\n                        ? 1200\n                        : DesignProps.MaxWidth,\n                wrapText: true,\n                resizable: DesignProps.Resizable,\n                cellEditor: 'agCheckboxCellEditor',\n                checkboxSelection: DesignProps.Selectable,\n                showDisabledCheckboxes: true,\n                enableSorting: Headers[i].Type === 'text',\n                cellRenderer:\n                    // Headers[i].Type === \"checkbox\" ? \"agCheckboxCellRenderer\" :\n                    dataLoading === true\n                        ? AnyGenLoadingCell\n                        : Headers[i].Type === 'checkbox'\n                          ? CheckboxCell\n                          : Headers[i].Type === 'action'\n                            ? ActionCell\n                            : Headers[i].Type === 'toggle'\n                              ? ToggleButtonCell\n                              : Headers[i].Type === 'text'\n                                ? AnyGenTableCell\n                                : Headers[i].Type === 'number'\n                                  ? AnyGenTableNumberCell\n                                  : Headers[i].Type === 'custom'\n                                    ? (params) =>\n                                          AnyGenTableCustomCell(\n                                              params,\n                                              onViewDetails\n                                          )\n                                    : StatusCell,\n                cellRendererParams: {\n                    maxCellHeight: this.props.maxCellHeight,\n                    onAction:\n                        Headers[i].Type === 'checkbox' ? onChange : onAction,\n                    actionList: actionList,\n                    customCell: DesignProps.CustomCellDesign,\n                    checkbox: DesignProps.Selectable,\n                    parentFunction: isValidData(DesignProps.ParentFunctionName)\n                        ? this.props[DesignProps.ParentFunctionName]\n                        : () => {},\n                },\n                // headerComponent: Headers[i].Key === \"checkbox\"?CheckboxCell:AnyGenHeaderCell,\n            }\n            if (Headers[i].Type === 'checkbox') {\n                newHeaderInfo.headerComponent = HeaderCheckboxCell\n                newHeaderInfo.headerComponentParams = selectAllInfo\n            } else if (Headers[i].Key === 'no') {\n                let pageNumber = 1\n                let pageSize = this.props.Data.length\n                newHeaderInfo.valueGetter = (params) => {\n                    if (isValidData(pageNumber) && isValidData(pageSize)) {\n                        return getSerialRowNumber(\n                            pageNumber,\n                            pageSize,\n                            params.node.rowIndex\n                        )\n                    } else {\n                        return params.node.rowIndex + 1\n                    }\n                }\n            }\n            headerArr.push(newHeaderInfo)\n        }\n        this.setState({\n            columnDefs: headerArr,\n        })\n    }\n\n    prepareTableHeight = () => {\n        let { cellHeight } = this.props\n        let tableContainerHeight = this.tableContainerRef.current.clientHeight\n        let heightType // autoHeight, manualHeight, fixedHeight\n        let tableRowHeight = cellHeight\n        let tableHeaderHeight = 50 //55.78\n        let minHeight = 400 // 150 + 56\n        let dataHeight =\n            this.props.Data.length * tableRowHeight + tableHeaderHeight\n        if (dataHeight < minHeight) {\n            heightType = 'manualHeight'\n            this.setState({\n                tableHeight: dataHeight,\n                heightType,\n            })\n        } else {\n            heightType = 'fixedHeight'\n            this.setState({\n                tableHeight:\n                    tableContainerHeight > 0 ? tableContainerHeight : 400,\n                heightType,\n            })\n        }\n    }\n\n    render() {\n        let { autoHeight, tableHeight } = this.state\n        let { noShadow } = this.props\n        return (\n            <div\n                className={\n                    noShadow\n                        ? 'default-table-container no-shadow'\n                        : 'default-table-container'\n                }\n                ref={this.tableContainerRef}\n            >\n                <div\n                    className=\"ag-theme-quartz\"\n                    style={{\n                        width: '100%',\n                        height: tableHeight,\n                    }}\n                >\n                    <AgGridReact\n                        suppressRowClickSelection={false} // for row selection\n                        suppressCellFocus={true} // for column color (selection)\n                        domLayout={autoHeight ? 'autoHeight' : 'normal'}\n                        defaultColDef={this.state.defaultColDef}\n                        columnDefs={this.state.columnDefs}\n                        rowClass={'my-table-row'}\n                        autoSizeStrategy={autoSizeStrategy}\n                        rowSelection={'multiple'}\n                        rowData={this.props.Data}\n                    ></AgGridReact>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst AnyGenTableCell = (params) => {\n    let textValue = params.value\n    if (!textValue) {\n        if (params.colDef['field'] === 'Abstract') {\n            textValue = params.data['Snippet']\n        } else {\n            textValue = '-'\n        }\n    }\n\n    return (\n        <div className=\"table-value-container\">\n            <div\n                className=\"table-cell-value-col\"\n                style={{\n                    maxHeight: params.maxCellHeight,\n                    padding: params.checkbox ? '5px 15px 5px 10px' : '5px 15px',\n                }}\n            >\n                {textValue}\n            </div>\n        </div>\n    )\n}\nconst AnyGenTableNumberCell = (params) => {\n    return (\n        <div className=\"table-value-container\">\n            <div\n                className=\"table-cell-value-col number-col\"\n                style={{\n                    maxHeight: params.maxCellHeight,\n                    padding: params.checkbox ? '5px 15px 5px 10px' : '5px 15px',\n                }}\n            >\n                {params.value}\n            </div>\n        </div>\n    )\n}\n\nconst AnyGenLoadingCell = () => {\n    return (\n        <div className=\"table-loading-cell\">\n            <div className=\"table-loading-container\">\n                <div className=\"table-loading\" />\n            </div>\n        </div>\n    )\n}\n\nconst AnyGenTableCustomCell = (params) => {\n    // console.log(\"At Fun \",params.customCell, \", \", typeof params.parentFunction, \", \", params.parentFunction)\n    return (\n        <div className=\"table-value-container\">\n            <div\n                className=\"table-cell-value-col\"\n                style={{\n                    maxHeight: params.maxCellHeight,\n                    padding: params.checkbox ? '5px 15px 5px 10px' : '5px 15px',\n                }}\n            >\n                {params.customCell === 'Simple List'\n                    ? SimpleList(params.value)\n                    : params.customCell === 'Family Applicants' ||\n                        params.customCell === 'Family Inventors'\n                      ? FamilyApplicantList(params.value)\n                      : params.customCell === 'Comparison History'\n                        ? ComparisonInputs(params.value)\n                        : params.customCell === 'Patent List'\n                          ? PatentList(params.value)\n                          : params.customCell === 'CPC List'\n                            ? CPCList(params.value)\n                            : params.customCell === 'Assignee List'\n                              ? AssigneeList(params.value)\n                              : params.customCell === 'Legal Status'\n                                ? LegalStatus(params.value)\n                                : params.customCell === 'Similarity Score'\n                                  ? SimilarityScore(params.value)\n                                  : params.customCell ===\n                                      'Infringed Feature List'\n                                    ? InfringedFeatureList(params.value)\n                                    : params.customCell ===\n                                        'Relevant Patent Info'\n                                      ? RelevantPatentInfo(params.value)\n                                      : params.customCell ===\n                                          'Patent Info With condition'\n                                        ? PatentInfoWithCondition(params.value)\n                                        : params.customCell === 'Patent Link'\n                                          ? PatentLink(params.value)\n                                          : params.customCell === 'Patent Link'\n                                            ? PatentLink(params.value)\n                                            : params.customCell ===\n                                                'parent function'\n                                              ? params.parentFunction(params)\n                                              : null}\n            </div>\n        </div>\n    )\n}\n\nconst HeaderCheckboxCell = (params) => {\n    return (\n        <div className=\"table-value-container\">\n            <div className=\"table-cell-value-col header-checkbox-col\">\n                {/*<MyCheckbox onChange={params.onAction}*/}\n                {/*            disabled={params.disabled}*/}\n                {/*            checked={params.checked}*/}\n                {/*            className={\"my-table-checkbox\"}/>*/}\n            </div>\n        </div>\n    )\n}\n\nconst CheckboxCell = (params) => {\n    let isSelected = params.data['isSelected'] === true\n    return (\n        <div className=\"table-value-container\">\n            <div className=\"table-cell-value-col checkbox-col\">\n                {/*<MyCheckbox onChange={() => params.onAction(params.rowIndex, params.data)}*/}\n                {/*            checked={isSelected}*/}\n                {/*            className={\"my-table-checkbox\"}/>*/}\n            </div>\n        </div>\n    )\n}\n\nconst ToggleButtonCell = (params) => {\n    return (\n        <div className=\"table-value-container\">\n            <div\n                className=\"table-cell-value-col center-col\"\n                style={{ maxHeight: params.maxCellHeight }}\n            >\n                <SimpleToggle />\n            </div>\n        </div>\n    )\n}\n\nconst ActionCell = (params) => {\n    return (\n        <div className=\"table-value-container\">\n            <div className=\"action-cell\">\n                <div className=\"action-cell-list\">\n                    {params.actionList.map((actionInfo, aid) => (\n                        <button\n                            key={aid}\n                            className={getMenuIconClass(\n                                actionInfo.Icon.Name,\n                                false\n                            )}\n                            onClick={params.onAction}\n                        >\n                            {actionInfo.Icon.IconType === 'Single' ? (\n                                <Icon\n                                    icon={actionInfo.Icon.Name}\n                                    size={14}\n                                    title={actionInfo.Name}\n                                    fillRule={'evenodd'}\n                                />\n                            ) : (\n                                <DuoIcon\n                                    name={actionInfo.Icon.Name}\n                                    size={14}\n                                    title={actionInfo.Name}\n                                    fillRule={'evenodd'}\n                                />\n                            )}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport const StatusCell = () => {\n    return <div className=\"model-status-type\">In progress</div>\n}\n\nMyTable.defaultProps = {\n    Headers: FTOFeatureListHeader,\n    Data: FTOFeatureData,\n    autoHeight: false,\n    maxCellHeight: 200, // cell inner content's maximum scroll\n    cellHeight: 50, // cell height for calculating table height >> Normally should be bigger than maxCellHeight + 21\n    noShadow: false,\n    viewPatentInfo: false,\n    showIDTooltip: true,\n    tableHeight: '100%',\n}\nMyTable.propTypes = {\n    Headers: PropTypes.array.isRequired,\n    Data: PropTypes.array.isRequired,\n    autoHeight: PropTypes.bool,\n    maxCellHeight: PropTypes.number,\n    cellHeight: PropTypes.number,\n    noShadow: PropTypes.bool,\n    viewPatentInfo: PropTypes.bool,\n    showIDTooltip: PropTypes.bool,\n    tableHeight: PropTypes.string,\n    actionList: PropTypes.array,\n    onAction: PropTypes.func,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}