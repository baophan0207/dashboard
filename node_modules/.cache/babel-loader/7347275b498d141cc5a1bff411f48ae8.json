{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\dashboard\\\\src\\\\assets\\\\components\\\\PopupComponents\\\\Help\\\\Help.js\";\nimport React, { Component } from 'react';\nimport { TabContext, TabPanel, TabList } from '@mui/lab';\nimport { Button, Box, Tab } from '@mui/material';\nimport './Help.css';\n\n// import ReactPlayer from 'react-player'\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Help extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '1',\n      documentation: {\n        heading: 'Creating a Classification tree',\n        steps: [{\n          title: 'Start with the Root Node',\n          description: 'Drag and drop the root node onto the canvas.'\n        }, {\n          title: 'Add Child Nodes to the Root Node',\n          description: 'Drag and drop a node from the left side onto the root node to create a child node.'\n        }, {\n          title: 'Add Child Nodes to Existing Child Nodes',\n          description: 'Drag and drop a node from the left side onto an existing child node to create a child of that node.'\n        }, {\n          title: 'Change Parent Nodes',\n          description: 'If you want to change the parent node of a child node, click on the edge of the line connecting the child to its current parent, then drag it to the new parent node you want to connect it to.'\n        }, {\n          title: 'Repeat the Process',\n          description: 'Continue dragging and dropping nodes to build out your classification tree.'\n        }]\n      },\n      videoUrl: 'https://youtu.be/HAj_d6dR_xM'\n    };\n  }\n  render() {\n    const handleChange = (event, newValue) => {\n      this.setState({\n        ...this.state,\n        value: newValue\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"help-container\",\n      children: /*#__PURE__*/_jsxDEV(TabContext, {\n        value: this.state.value,\n        clasName: \"tab-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          onChange: handleChange,\n          TabIndicatorProps: {\n            style: {\n              backgroundColor: '#000'\n            }\n          },\n          sx: {\n            fontSize: '14px',\n            '& button': {\n              minWidth: '200px',\n              textTransform: 'none'\n            },\n            '& button.Mui-selected': {\n              color: 'black',\n              fontWeight: 700\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Documentation\",\n            value: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Video\",\n            value: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"guide-btn\",\n          variant: \"contained\",\n          children: \"Guide me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"1\",\n          sx: {\n            padding: '0'\n          },\n          children: this.state.documentation && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"heading\",\n              children: this.state.documentation.heading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), this.state.documentation.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"instruction-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"title\",\n                  children: [index + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instruction-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"title\",\n                  children: step.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"description\",\n                  children: step.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"2\",\n          sx: {\n            padding: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(VideoPlayer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Help;","map":{"version":3,"names":["React","Component","TabContext","TabPanel","TabList","Button","Box","Tab","VideoPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","Help","constructor","props","state","value","documentation","heading","steps","title","description","videoUrl","render","handleChange","event","newValue","setState","className","children","clasName","onChange","TabIndicatorProps","style","backgroundColor","sx","fontSize","minWidth","textTransform","color","fontWeight","label","fileName","_jsxFileName","lineNumber","columnNumber","variant","padding","map","step","index"],"sources":["D:/Task/dashboard/src/assets/components/PopupComponents/Help/Help.js"],"sourcesContent":["import React, { Component } from 'react'\n\nimport { TabContext, TabPanel, TabList } from '@mui/lab'\nimport { Button, Box, Tab } from '@mui/material'\n\nimport './Help.css'\n\n// import ReactPlayer from 'react-player'\nimport VideoPlayer from '../VideoPlayer/VideoPlayer'\n\nclass Help extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '1',\n            documentation: {\n                heading: 'Creating a Classification tree',\n                steps: [\n                    {\n                        title: 'Start with the Root Node',\n                        description:\n                            'Drag and drop the root node onto the canvas.',\n                    },\n                    {\n                        title: 'Add Child Nodes to the Root Node',\n                        description:\n                            'Drag and drop a node from the left side onto the root node to create a child node.',\n                    },\n                    {\n                        title: 'Add Child Nodes to Existing Child Nodes',\n                        description:\n                            'Drag and drop a node from the left side onto an existing child node to create a child of that node.',\n                    },\n                    {\n                        title: 'Change Parent Nodes',\n                        description:\n                            'If you want to change the parent node of a child node, click on the edge of the line connecting the child to its current parent, then drag it to the new parent node you want to connect it to.',\n                    },\n                    {\n                        title: 'Repeat the Process',\n                        description:\n                            'Continue dragging and dropping nodes to build out your classification tree.',\n                    },\n                ],\n            },\n            videoUrl: 'https://youtu.be/HAj_d6dR_xM',\n        }\n    }\n    render() {\n        const handleChange = (event, newValue) => {\n            this.setState({ ...this.state, value: newValue })\n        }\n        return (\n            <Box className=\"help-container\">\n                <TabContext\n                    value={this.state.value}\n                    clasName=\"tab-list-container\"\n                >\n                    {/*<Box>*/}\n                    <TabList\n                        onChange={handleChange}\n                        TabIndicatorProps={{\n                            style: {\n                                backgroundColor: '#000',\n                            },\n                        }}\n                        sx={{\n                            fontSize: '14px',\n                            '& button': {\n                                minWidth: '200px',\n                                textTransform: 'none',\n                            },\n                            '& button.Mui-selected': {\n                                color: 'black',\n                                fontWeight: 700,\n                            },\n                        }}\n                    >\n                        <Tab label=\"Documentation\" value=\"1\" />\n                        <Tab label=\"Video\" value=\"2\" />\n                    </TabList>\n                    <Button className=\"guide-btn\" variant=\"contained\">\n                        Guide me\n                    </Button>\n                    {/*</Box>*/}\n                    <TabPanel value=\"1\" sx={{ padding: '0' }}>\n                        {this.state.documentation && (\n                            <>\n                                <h4 className=\"heading\">\n                                    {this.state.documentation.heading}\n                                </h4>\n                                {this.state.documentation.steps.map(\n                                    (step, index) => (\n                                        <div\n                                            key={index}\n                                            className=\"instruction-container\"\n                                        >\n                                            <div>\n                                                <p className=\"title\">\n                                                    {index + 1}.\n                                                </p>\n                                            </div>\n                                            <div className=\"instruction-content\">\n                                                <p className=\"title\">\n                                                    {step.title}\n                                                </p>\n                                                <p className=\"description\">\n                                                    {step.description}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    )\n                                )}\n                            </>\n                        )}\n                    </TabPanel>\n                    <TabPanel value=\"2\" sx={{ padding: '0' }}>\n                        <VideoPlayer />\n                    </TabPanel>\n                </TabContext>\n            </Box>\n        )\n    }\n}\n\nexport default Help\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}