{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\dashboard\\\\src\\\\assets\\\\components\\\\PopupComponents\\\\BasicComponents\\\\PopupTable\\\\MyTable.js\";\nimport React from \"react\";\nimport \"./StyleSheet.css\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\nimport { FTOFeatureListHeader } from \"./TableProps\";\nimport { FTOFeatureData } from \"./DefaultProps\";\nimport PropTypes from \"prop-types\";\nimport { SimpleToggle } from \"../SimpleToggle/SimpleToggle\";\nimport { getMenuIconClass, getSerialRowNumber, isValidData } from \"../CommonMethods\";\nimport Icon from \"../../../IconLibrary/Icon\";\nimport DuoIcon from \"../../../IconLibrary/DuoIcon\";\nimport MyCheckbox from \"../BasicComponents/Checkbox/MyCheckbox\";\nimport { AssigneeList, ComparisonInputs, CPCList, FamilyApplicantList, InfringedFeatureList, LegalStatus, PatentInfoWithCondition, PatentList, RelevantPatentInfo, SimilarityScore, SimpleList } from \"./CustomTableCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst autoSizeStrategy = {\n  type: 'fitGridWidth',\n  defaultMinWidth: 100\n};\nexport default class MyTable extends React.Component {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    this.prepareData = function (Headers) {\n      let actionList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      let onAction = arguments.length > 2 ? arguments[2] : undefined;\n      let onChange = arguments.length > 3 ? arguments[3] : undefined;\n      let onViewDetails = arguments.length > 4 ? arguments[4] : undefined;\n      let selectAllInfo = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n      let pendingLoading = arguments.length > 6 ? arguments[6] : undefined;\n      let pendingHeaders = arguments.length > 7 ? arguments[7] : undefined;\n      let headerArr = [];\n      for (let i = 0; i < Headers.length; i++) {\n        let dataLoading = false;\n        if (pendingLoading === true && pendingHeaders.includes(Headers[i].Key)) {\n          dataLoading = true;\n        }\n        let DesignProps = Headers[i].Design;\n        let newHeaderInfo = {\n          headerName: Headers[i].DisplayName,\n          field: Headers[i].Key,\n          sortable: Headers[i].Type === \"text\",\n          filter: Headers[i].Type === \"text\" ? \"agSetColumnFilter\" : \"\",\n          pinned: DesignProps.Pinned,\n          lockPinned: DesignProps.LockPinned,\n          flex: DesignProps.Flex,\n          minWidth: DesignProps.MinWidth,\n          maxWidth: DesignProps.MaxWidth === \"auto\" ? 1200 : DesignProps.MaxWidth,\n          wrapText: true,\n          resizable: DesignProps.Resizable,\n          cellEditor: 'agCheckboxCellEditor',\n          checkboxSelection: DesignProps.Selectable,\n          showDisabledCheckboxes: true,\n          enableSorting: Headers[i].Type === \"text\",\n          cellRenderer:\n          // Headers[i].Type === \"checkbox\" ? \"agCheckboxCellRenderer\" :\n          dataLoading === true ? AnyGenLoadingCell : Headers[i].Type === \"checkbox\" ? CheckboxCell : Headers[i].Type === \"action\" ? ActionCell : Headers[i].Type === \"toggle\" ? ToggleButtonCell : Headers[i].Type === \"text\" ? AnyGenTableCell : Headers[i].Type === \"number\" ? AnyGenTableNumberCell : Headers[i].Type === \"custom\" ? params => AnyGenTableCustomCell(params, onViewDetails) : StatusCell,\n          cellRendererParams: {\n            maxCellHeight: _this.props.maxCellHeight,\n            onAction: Headers[i].Type === \"checkbox\" ? onChange : onAction,\n            actionList: actionList,\n            customCell: DesignProps.CustomCellDesign,\n            checkbox: DesignProps.Selectable,\n            parentFunction: isValidData(DesignProps.ParentFunctionName) ? _this.props[DesignProps.ParentFunctionName] : () => {}\n          }\n          // headerComponent: Headers[i].Key === \"checkbox\"?CheckboxCell:AnyGenHeaderCell,\n        };\n        if (Headers[i].Type === \"checkbox\") {\n          newHeaderInfo.headerComponent = HeaderCheckboxCell;\n          newHeaderInfo.headerComponentParams = selectAllInfo;\n        } else if (Headers[i].Key === \"no\") {\n          let pageNumber = 1;\n          let pageSize = _this.props.Data.length;\n          newHeaderInfo.valueGetter = params => {\n            if (isValidData(pageNumber) && isValidData(pageSize)) {\n              return getSerialRowNumber(pageNumber, pageSize, params.node.rowIndex);\n            } else {\n              return params.node.rowIndex + 1;\n            }\n          };\n        }\n        headerArr.push(newHeaderInfo);\n      }\n      _this.setState({\n        columnDefs: headerArr\n      });\n    };\n    this.prepareTableHeight = () => {\n      let {\n        cellHeight\n      } = this.props;\n      let tableContainerHeight = this.tableContainerRef.current.clientHeight;\n      let heightType; // autoHeight, manualHeight, fixedHeight\n      let tableRowHeight = cellHeight;\n      let tableHeaderHeight = 50; //55.78\n      let minHeight = 400; // 150 + 56\n      let dataHeight = this.props.Data.length * tableRowHeight + tableHeaderHeight;\n      if (dataHeight < minHeight) {\n        heightType = \"manualHeight\";\n        this.setState({\n          tableHeight: dataHeight,\n          heightType\n        });\n      } else {\n        heightType = \"fixedHeight\";\n        this.setState({\n          tableHeight: tableContainerHeight > 0 ? tableContainerHeight : 400,\n          heightType\n        });\n      }\n    };\n    this.tableContainerRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      columnDefs: [],\n      rowData: [],\n      defaultColDef: {\n        flex: 1,\n        wrapText: true,\n        autoHeight: true,\n        maxHeight: 40,\n        pinned: 'right',\n        enableRenameColumns: true\n\n        // cellRenderer:AnyGenTableCell,\n        // cellRendererParams : {\n        //     maxCellHeight: this.props.maxCellHeight\n        // },\n      }\n    };\n  }\n  componentDidMount() {\n    let {\n      Headers,\n      actionList,\n      onAction,\n      onChange,\n      onViewDetails,\n      selectAllInfo = {},\n      pendingLoading = false,\n      pendingHeaders = []\n    } = this.props;\n    this.prepareData(Headers, actionList, onAction, onChange, onViewDetails, selectAllInfo, pendingLoading, pendingHeaders);\n    this.prepareTableHeight();\n  }\n  componentWillReceiveProps(nextProps, nextContext) {\n    let {\n      Headers,\n      actionList,\n      onAction,\n      onChange,\n      onViewDetails,\n      selectAllInfo = {},\n      pendingLoading = false,\n      pendingHeaders = []\n    } = nextProps;\n    this.prepareData(Headers, actionList, onAction, onChange, onViewDetails, selectAllInfo, pendingLoading, pendingHeaders);\n    this.prepareTableHeight();\n  }\n  render() {\n    let {\n      autoHeight,\n      tableHeight\n    } = this.state;\n    let {\n      noShadow\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: noShadow ? \"default-table-container no-shadow\" : \"default-table-container\",\n      ref: this.tableContainerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ag-theme-quartz\",\n        style: {\n          width: '100%',\n          height: tableHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          suppressRowClickSelection: false // for row selection\n          ,\n          suppressCellFocus: true // for column color (selection)\n          ,\n          domLayout: autoHeight ? \"autoHeight\" : \"normal\",\n          defaultColDef: this.state.defaultColDef,\n          columnDefs: this.state.columnDefs,\n          rowClass: \"my-table-row\",\n          autoSizeStrategy: autoSizeStrategy,\n          rowSelection: \"multiple\",\n          rowData: this.props.Data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst AnyGenTableCell = params => {\n  let textValue = params.value;\n  if (!textValue) {\n    if (params.colDef[\"field\"] === \"Abstract\") {\n      textValue = params.data[\"Snippet\"];\n    } else {\n      textValue = \"-\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col\",\n      style: {\n        maxHeight: params.maxCellHeight,\n        padding: params.checkbox ? \"5px 15px 5px 10px\" : \"5px 15px\"\n      },\n      children: textValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 9\n  }, this);\n};\n_c = AnyGenTableCell;\nconst AnyGenTableNumberCell = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col number-col\",\n      style: {\n        maxHeight: params.maxCellHeight,\n        padding: params.checkbox ? \"5px 15px 5px 10px\" : \"5px 15px\"\n      },\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n};\n_c2 = AnyGenTableNumberCell;\nconst AnyGenLoadingCell = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-loading-cell\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n};\n_c3 = AnyGenLoadingCell;\nconst AnyGenTableCustomCell = params => {\n  // console.log(\"At Fun \",params.customCell, \", \", typeof params.parentFunction, \", \", params.parentFunction)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col\",\n      style: {\n        maxHeight: params.maxCellHeight,\n        padding: params.checkbox ? \"5px 15px 5px 10px\" : \"5px 15px\"\n      },\n      children: params.customCell === \"Simple List\" ? SimpleList(params.value) : params.customCell === \"Family Applicants\" || params.customCell === \"Family Inventors\" ? FamilyApplicantList(params.value) : params.customCell === \"Comparison History\" ? ComparisonInputs(params.value) : params.customCell === \"Patent List\" ? PatentList(params.value) : params.customCell === \"CPC List\" ? CPCList(params.value) : params.customCell === \"Assignee List\" ? AssigneeList(params.value) : params.customCell === \"Legal Status\" ? LegalStatus(params.value) : params.customCell === \"Similarity Score\" ? SimilarityScore(params.value) : params.customCell === \"Infringed Feature List\" ? InfringedFeatureList(params.value) : params.customCell === \"Relevant Patent Info\" ? RelevantPatentInfo(params.value) : params.customCell === \"Patent Info With condition\" ? PatentInfoWithCondition(params.value) : params.customCell === \"parent function\" ? params.parentFunction(params) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n};\n_c4 = AnyGenTableCustomCell;\nconst HeaderCheckboxCell = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col header-checkbox-col\",\n      children: /*#__PURE__*/_jsxDEV(MyCheckbox, {\n        onChange: params.onAction,\n        disabled: params.disabled,\n        checked: params.checked,\n        className: \"my-table-checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 9\n  }, this);\n};\n_c5 = HeaderCheckboxCell;\nconst CheckboxCell = params => {\n  let isSelected = params.data[\"isSelected\"] === true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col checkbox-col\",\n      children: /*#__PURE__*/_jsxDEV(MyCheckbox, {\n        onChange: () => params.onAction(params.rowIndex, params.data),\n        checked: isSelected,\n        className: \"my-table-checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 9\n  }, this);\n};\n_c6 = CheckboxCell;\nconst ToggleButtonCell = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-cell-value-col center-col\",\n      style: {\n        maxHeight: params.maxCellHeight\n      },\n      children: /*#__PURE__*/_jsxDEV(SimpleToggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 9\n  }, this);\n};\n_c7 = ToggleButtonCell;\nconst ActionCell = params => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-value-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-cell\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-cell-list\",\n        children: params.actionList.map((actionInfo, aid) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: getMenuIconClass(actionInfo.Icon.Name, false),\n          onClick: params.onAction,\n          children: actionInfo.Icon.IconType === \"Single\" ? /*#__PURE__*/_jsxDEV(Icon, {\n            icon: actionInfo.Icon.Name,\n            size: 14,\n            title: actionInfo.Name,\n            fillRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(DuoIcon, {\n            name: actionInfo.Icon.Name,\n            size: 14,\n            title: actionInfo.Name,\n            fillRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 41\n          }, this)\n        }, aid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 9\n  }, this);\n};\n_c8 = ActionCell;\nexport const StatusCell = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-status-type\",\n    children: \"In progress\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 9\n  }, this);\n};\n_c9 = StatusCell;\nMyTable.defaultProps = {\n  Headers: FTOFeatureListHeader,\n  Data: FTOFeatureData,\n  autoHeight: false,\n  maxCellHeight: 200,\n  // cell inner content's maximum scroll\n  cellHeight: 50,\n  // cell height for calculating table height >> Normally should be bigger than maxCellHeight + 21\n  noShadow: false,\n  viewPatentInfo: false,\n  showIDTooltip: true,\n  tableHeight: \"100%\"\n};\nMyTable.propTypes = {\n  Headers: PropTypes.array.isRequired,\n  Data: PropTypes.array.isRequired,\n  autoHeight: PropTypes.bool,\n  maxCellHeight: PropTypes.number,\n  cellHeight: PropTypes.number,\n  noShadow: PropTypes.bool,\n  viewPatentInfo: PropTypes.bool,\n  showIDTooltip: PropTypes.bool,\n  tableHeight: PropTypes.string,\n  actionList: PropTypes.array,\n  onAction: PropTypes.func\n};\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"AnyGenTableCell\");\n$RefreshReg$(_c2, \"AnyGenTableNumberCell\");\n$RefreshReg$(_c3, \"AnyGenLoadingCell\");\n$RefreshReg$(_c4, \"AnyGenTableCustomCell\");\n$RefreshReg$(_c5, \"HeaderCheckboxCell\");\n$RefreshReg$(_c6, \"CheckboxCell\");\n$RefreshReg$(_c7, \"ToggleButtonCell\");\n$RefreshReg$(_c8, \"ActionCell\");\n$RefreshReg$(_c9, \"StatusCell\");","map":{"version":3,"names":["React","AgGridReact","FTOFeatureListHeader","FTOFeatureData","PropTypes","SimpleToggle","getMenuIconClass","getSerialRowNumber","isValidData","Icon","DuoIcon","MyCheckbox","AssigneeList","ComparisonInputs","CPCList","FamilyApplicantList","InfringedFeatureList","LegalStatus","PatentInfoWithCondition","PatentList","RelevantPatentInfo","SimilarityScore","SimpleList","jsxDEV","_jsxDEV","autoSizeStrategy","type","defaultMinWidth","MyTable","Component","constructor","props","_this","this","prepareData","Headers","actionList","arguments","length","undefined","onAction","onChange","onViewDetails","selectAllInfo","pendingLoading","pendingHeaders","headerArr","i","dataLoading","includes","Key","DesignProps","Design","newHeaderInfo","headerName","DisplayName","field","sortable","Type","filter","pinned","Pinned","lockPinned","LockPinned","flex","Flex","minWidth","MinWidth","maxWidth","MaxWidth","wrapText","resizable","Resizable","cellEditor","checkboxSelection","Selectable","showDisabledCheckboxes","enableSorting","cellRenderer","AnyGenLoadingCell","CheckboxCell","ActionCell","ToggleButtonCell","AnyGenTableCell","AnyGenTableNumberCell","params","AnyGenTableCustomCell","StatusCell","cellRendererParams","maxCellHeight","customCell","CustomCellDesign","checkbox","parentFunction","ParentFunctionName","headerComponent","HeaderCheckboxCell","headerComponentParams","pageNumber","pageSize","Data","valueGetter","node","rowIndex","push","setState","columnDefs","prepareTableHeight","cellHeight","tableContainerHeight","tableContainerRef","current","clientHeight","heightType","tableRowHeight","tableHeaderHeight","minHeight","dataHeight","tableHeight","createRef","state","rowData","defaultColDef","autoHeight","maxHeight","enableRenameColumns","componentDidMount","componentWillReceiveProps","nextProps","nextContext","render","noShadow","className","ref","children","style","width","height","suppressRowClickSelection","suppressCellFocus","domLayout","rowClass","rowSelection","fileName","_jsxFileName","lineNumber","columnNumber","textValue","value","colDef","data","padding","_c","_c2","_c3","_c4","disabled","checked","_c5","isSelected","_c6","_c7","map","actionInfo","aid","Name","onClick","IconType","icon","size","title","fillRule","name","_c8","_c9","defaultProps","viewPatentInfo","showIDTooltip","propTypes","array","isRequired","bool","number","string","func","$RefreshReg$"],"sources":["D:/Task/dashboard/src/assets/components/PopupComponents/BasicComponents/PopupTable/MyTable.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./StyleSheet.css\";\r\nimport {AgGridReact} from \"ag-grid-react\";\r\nimport \"ag-grid-community/styles/ag-grid.css\";\r\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\r\nimport {FTOFeatureListHeader} from \"./TableProps\";\r\nimport {FTOFeatureData} from \"./DefaultProps\";\r\nimport PropTypes from \"prop-types\";\r\nimport {SimpleToggle} from \"../SimpleToggle/SimpleToggle\";\r\nimport {getMenuIconClass, getSerialRowNumber, isValidData} from \"../CommonMethods\";\r\nimport Icon from \"../../../IconLibrary/Icon\";\r\nimport DuoIcon from \"../../../IconLibrary/DuoIcon\";\r\nimport MyCheckbox from \"../BasicComponents/Checkbox/MyCheckbox\";\r\nimport {\r\n    AssigneeList,\r\n    ComparisonInputs,\r\n    CPCList,\r\n    FamilyApplicantList,\r\n    InfringedFeatureList,\r\n    LegalStatus,\r\n    PatentInfoWithCondition,\r\n    PatentList,\r\n    RelevantPatentInfo,\r\n    SimilarityScore,\r\n    SimpleList\r\n} from \"./CustomTableCell\";\r\n\r\nconst autoSizeStrategy = {\r\n    type: 'fitGridWidth',\r\n    defaultMinWidth: 100,\r\n};\r\n\r\nexport default class MyTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tableContainerRef = React.createRef();\r\n        this.state = {\r\n            columnDefs: [],\r\n            rowData: [],\r\n            defaultColDef: {\r\n                flex: 1,\r\n                wrapText: true,\r\n                autoHeight: true,\r\n                maxHeight: 40,\r\n                pinned: 'right',\r\n                enableRenameColumns: true,\r\n\r\n                // cellRenderer:AnyGenTableCell,\r\n                // cellRendererParams : {\r\n                //     maxCellHeight: this.props.maxCellHeight\r\n                // },\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {\r\n            Headers,\r\n            actionList,\r\n            onAction,\r\n            onChange,\r\n            onViewDetails,\r\n            selectAllInfo = {},\r\n            pendingLoading = false,\r\n            pendingHeaders = []\r\n        } = this.props;\r\n        this.prepareData(Headers, actionList, onAction, onChange, onViewDetails, selectAllInfo, pendingLoading, pendingHeaders);\r\n        this.prepareTableHeight();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        let {\r\n            Headers,\r\n            actionList,\r\n            onAction,\r\n            onChange,\r\n            onViewDetails,\r\n            selectAllInfo = {},\r\n            pendingLoading = false,\r\n            pendingHeaders = []\r\n        } = nextProps;\r\n        this.prepareData(Headers, actionList, onAction, onChange, onViewDetails, selectAllInfo, pendingLoading, pendingHeaders);\r\n        this.prepareTableHeight();\r\n    }\r\n\r\n    prepareData = (Headers, actionList = [], onAction, onChange, onViewDetails, selectAllInfo = {}, pendingLoading, pendingHeaders) => {\r\n        let headerArr = [];\r\n        for (let i = 0; i < Headers.length; i++) {\r\n            let dataLoading = false\r\n            if (pendingLoading === true && pendingHeaders.includes(Headers[i].Key)) {\r\n                dataLoading = true\r\n            }\r\n            let DesignProps = Headers[i].Design;\r\n            let newHeaderInfo = {\r\n                headerName: Headers[i].DisplayName,\r\n                field: Headers[i].Key,\r\n                sortable: Headers[i].Type === \"text\",\r\n                filter: Headers[i].Type === \"text\" ? \"agSetColumnFilter\" : \"\",\r\n                pinned: DesignProps.Pinned,\r\n                lockPinned: DesignProps.LockPinned,\r\n                flex: DesignProps.Flex,\r\n                minWidth: DesignProps.MinWidth,\r\n                maxWidth: DesignProps.MaxWidth === \"auto\" ? 1200 : DesignProps.MaxWidth,\r\n                wrapText: true,\r\n                resizable: DesignProps.Resizable,\r\n                cellEditor: 'agCheckboxCellEditor',\r\n                checkboxSelection: DesignProps.Selectable,\r\n                showDisabledCheckboxes: true,\r\n                enableSorting: Headers[i].Type === \"text\",\r\n                cellRenderer:\r\n                // Headers[i].Type === \"checkbox\" ? \"agCheckboxCellRenderer\" :\r\n                    dataLoading === true ? AnyGenLoadingCell :\r\n                        Headers[i].Type === \"checkbox\" ? CheckboxCell :\r\n                            Headers[i].Type === \"action\" ? ActionCell :\r\n                                Headers[i].Type === \"toggle\" ? ToggleButtonCell :\r\n                                    Headers[i].Type === \"text\" ? AnyGenTableCell :\r\n                                        Headers[i].Type === \"number\" ? AnyGenTableNumberCell :\r\n                                            Headers[i].Type === \"custom\" ? (params) => AnyGenTableCustomCell(params, onViewDetails) :\r\n                                                StatusCell\r\n                ,\r\n                cellRendererParams: {\r\n                    maxCellHeight: this.props.maxCellHeight,\r\n                    onAction: Headers[i].Type === \"checkbox\" ? onChange : onAction,\r\n                    actionList: actionList,\r\n                    customCell: DesignProps.CustomCellDesign,\r\n                    checkbox: DesignProps.Selectable,\r\n                    parentFunction: isValidData(DesignProps.ParentFunctionName) ?\r\n                        this.props[DesignProps.ParentFunctionName]\r\n                        :\r\n                        () => {\r\n                        },\r\n                },\r\n                // headerComponent: Headers[i].Key === \"checkbox\"?CheckboxCell:AnyGenHeaderCell,\r\n            }\r\n            if (Headers[i].Type === \"checkbox\") {\r\n                newHeaderInfo.headerComponent = HeaderCheckboxCell\r\n                newHeaderInfo.headerComponentParams = selectAllInfo\r\n            } else if (Headers[i].Key === \"no\") {\r\n                let pageNumber = 1\r\n                let pageSize = this.props.Data.length\r\n                newHeaderInfo.valueGetter = params => {\r\n                    if (isValidData(pageNumber) && isValidData(pageSize)) {\r\n                        return getSerialRowNumber(pageNumber, pageSize, params.node.rowIndex)\r\n                    } else {\r\n                        return (params.node.rowIndex + 1)\r\n                    }\r\n                }\r\n            }\r\n            headerArr.push(newHeaderInfo);\r\n        }\r\n        this.setState({\r\n            columnDefs: headerArr\r\n        })\r\n    }\r\n\r\n    prepareTableHeight = () => {\r\n        let {cellHeight} = this.props;\r\n        let tableContainerHeight = this.tableContainerRef.current.clientHeight;\r\n        let heightType; // autoHeight, manualHeight, fixedHeight\r\n        let tableRowHeight = cellHeight;\r\n        let tableHeaderHeight = 50; //55.78\r\n        let minHeight = 400; // 150 + 56\r\n        let dataHeight = (this.props.Data.length * tableRowHeight) + tableHeaderHeight;\r\n        if (dataHeight < minHeight) {\r\n            heightType = \"manualHeight\";\r\n            this.setState({\r\n                tableHeight: dataHeight,\r\n                heightType,\r\n            })\r\n        } else {\r\n            heightType = \"fixedHeight\";\r\n            this.setState({\r\n                tableHeight: tableContainerHeight > 0 ? tableContainerHeight : 400,\r\n                heightType,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let {autoHeight, tableHeight} = this.state;\r\n        let {noShadow} = this.props;\r\n        return (\r\n            <div className={noShadow ? \"default-table-container no-shadow\" : \"default-table-container\"}\r\n                 ref={this.tableContainerRef}>\r\n                <div\r\n                    className=\"ag-theme-quartz\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: tableHeight\r\n                    }}\r\n                >\r\n                    <AgGridReact\r\n                        suppressRowClickSelection={false} // for row selection\r\n                        suppressCellFocus={true} // for column color (selection)\r\n                        domLayout={autoHeight ? \"autoHeight\" : \"normal\"}\r\n                        defaultColDef={this.state.defaultColDef}\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowClass={\"my-table-row\"}\r\n                        autoSizeStrategy={autoSizeStrategy}\r\n                        rowSelection={\"multiple\"}\r\n                        rowData={this.props.Data}>\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst AnyGenTableCell = (params) => {\r\n    let textValue = params.value\r\n    if (!textValue) {\r\n        if (params.colDef[\"field\"] === \"Abstract\") {\r\n            textValue = params.data[\"Snippet\"]\r\n        } else {\r\n            textValue = \"-\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-value-container\">\r\n            <div className=\"table-cell-value-col\"\r\n                 style={{maxHeight: params.maxCellHeight, padding: params.checkbox ? \"5px 15px 5px 10px\" : \"5px 15px\"}}>\r\n                {textValue}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst AnyGenTableNumberCell = (params) => {\r\n    return (\r\n        <div className=\"table-value-container\">\r\n            <div className=\"table-cell-value-col number-col\"\r\n                 style={{maxHeight: params.maxCellHeight, padding: params.checkbox ? \"5px 15px 5px 10px\" : \"5px 15px\"}}>\r\n                {params.value}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AnyGenLoadingCell = () => {\r\n    return (\r\n        <div className=\"table-loading-cell\">\r\n            <div className=\"table-loading-container\">\r\n                <div className=\"table-loading\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AnyGenTableCustomCell = (params) => {\r\n    // console.log(\"At Fun \",params.customCell, \", \", typeof params.parentFunction, \", \", params.parentFunction)\r\n    return (\r\n        <div className=\"table-value-container\">\r\n            <div className=\"table-cell-value-col\"\r\n                 style={{maxHeight: params.maxCellHeight, padding: params.checkbox ? \"5px 15px 5px 10px\" : \"5px 15px\"}}>\r\n                {\r\n                    params.customCell === \"Simple List\" ?\r\n                        SimpleList(params.value)\r\n                        :\r\n                        params.customCell === \"Family Applicants\" || params.customCell === \"Family Inventors\" ?\r\n                            FamilyApplicantList(params.value)\r\n                            :\r\n                            params.customCell === \"Comparison History\" ?\r\n                                ComparisonInputs(params.value)\r\n                                :\r\n                                params.customCell === \"Patent List\" ?\r\n                                    PatentList(params.value)\r\n                                    :\r\n                                    params.customCell === \"CPC List\" ?\r\n                                        CPCList(params.value)\r\n                                        :\r\n                                        params.customCell === \"Assignee List\" ?\r\n                                            AssigneeList(params.value)\r\n                                            :\r\n                                            params.customCell === \"Legal Status\" ?\r\n                                                LegalStatus(params.value)\r\n                                                :\r\n                                                params.customCell === \"Similarity Score\" ?\r\n                                                    SimilarityScore(params.value)\r\n                                                    :\r\n                                                    params.customCell === \"Infringed Feature List\" ?\r\n                                                        InfringedFeatureList(params.value)\r\n                                                        :\r\n                                                        params.customCell === \"Relevant Patent Info\" ?\r\n                                                            RelevantPatentInfo(params.value)\r\n                                                            :\r\n                                                            params.customCell === \"Patent Info With condition\" ?\r\n                                                                PatentInfoWithCondition(params.value)\r\n                                                                :\r\n                                                                params.customCell === \"parent function\" ?\r\n                                                                    params.parentFunction(params)\r\n                                                                    :\r\n                                                                    null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HeaderCheckboxCell = (params) => {\r\n    return (\r\n        <div className=\"table-value-container\">\r\n            <div className=\"table-cell-value-col header-checkbox-col\">\r\n                <MyCheckbox onChange={params.onAction}\r\n                            disabled={params.disabled}\r\n                            checked={params.checked}\r\n                            className={\"my-table-checkbox\"}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CheckboxCell = (params) => {\r\n    let isSelected = params.data[\"isSelected\"] === true\r\n    return (\r\n        <div className=\"table-value-container\">\r\n            <div className=\"table-cell-value-col checkbox-col\">\r\n                <MyCheckbox onChange={() => params.onAction(params.rowIndex, params.data)}\r\n                            checked={isSelected}\r\n                            className={\"my-table-checkbox\"}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ToggleButtonCell = (params) => {\r\n    return (\r\n        <div className=\"table-value-container\">\r\n            <div className=\"table-cell-value-col center-col\"\r\n                 style={{maxHeight: params.maxCellHeight}}>\r\n                <SimpleToggle/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ActionCell = (params) => {\r\n    return (\r\n        <div className=\"table-value-container\">\r\n            <div className=\"action-cell\">\r\n                <div className=\"action-cell-list\">\r\n                    {\r\n                        params.actionList.map((actionInfo, aid) =>\r\n                            <button key={aid} className={getMenuIconClass(actionInfo.Icon.Name, false)}\r\n                                    onClick={params.onAction}>\r\n                                {\r\n                                    actionInfo.Icon.IconType === \"Single\" ?\r\n                                        <Icon icon={actionInfo.Icon.Name} size={14} title={actionInfo.Name}\r\n                                              fillRule={\"evenodd\"}/>\r\n                                        :\r\n                                        <DuoIcon name={actionInfo.Icon.Name} size={14} title={actionInfo.Name}\r\n                                                 fillRule={\"evenodd\"}/>\r\n                                }\r\n                            </button>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const StatusCell = () => {\r\n    return (\r\n        <div className=\"model-status-type\">\r\n            In progress\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nMyTable.defaultProps = {\r\n    Headers: FTOFeatureListHeader,\r\n    Data: FTOFeatureData,\r\n    autoHeight: false,\r\n    maxCellHeight: 200, // cell inner content's maximum scroll\r\n    cellHeight: 50, // cell height for calculating table height >> Normally should be bigger than maxCellHeight + 21\r\n    noShadow: false,\r\n    viewPatentInfo: false,\r\n    showIDTooltip: true,\r\n    tableHeight: \"100%\",\r\n\r\n\r\n}\r\nMyTable.propTypes = {\r\n    Headers: PropTypes.array.isRequired,\r\n    Data: PropTypes.array.isRequired,\r\n    autoHeight: PropTypes.bool,\r\n    maxCellHeight: PropTypes.number,\r\n    cellHeight: PropTypes.number,\r\n    noShadow: PropTypes.bool,\r\n    viewPatentInfo: PropTypes.bool,\r\n    showIDTooltip: PropTypes.bool,\r\n    tableHeight: PropTypes.string,\r\n    actionList: PropTypes.array,\r\n    onAction: PropTypes.func,\r\n\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}