{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\dashboard\\\\src\\\\assets\\\\components\\\\PopupComponents\\\\ClassificationTree\\\\ClassificationTree.js\";\nimport React, { Component } from 'react';\nimport TabPopup from '../BasicComponents/Tab/TabPopup';\nimport Nodes from '../Nodes/Nodes';\nimport './ClassificationTree.css';\nimport NodesActions from '../Nodes/NodesActions/NodesActions';\nimport { Headers } from '../Nodes/TableProps';\nimport { Data } from '../Nodes/DefaultProps';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass ClassificationTree extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSearch = event => {\n      const searchTerm = event.target.value.toLowerCase();\n      if (this.state.typingTimeOut) {\n        clearTimeout(this.state.typingTimeOut);\n      }\n      console.log(event.target.value);\n      this.setState({\n        searchValue: event.target.value,\n        typingTimeOut: setTimeout(() => {\n          const filteredData = this.state.data.filter(item => {\n            // Check for search term in id.PatentId, title, abstract, and class.Name\n            const idMatch = item.id.toLowerCase().includes(searchTerm);\n            const nameMatch = item.name.toLowerCase().includes(searchTerm);\n            const descriptionMatch = item.description.toLowerCase().includes(searchTerm);\n            return idMatch || nameMatch || descriptionMatch;\n          });\n          this.setState({\n            filteredData\n          });\n          // this.handlePageChange(1)\n          console.log(searchTerm);\n        }, 500)\n      });\n    };\n    this.state = {\n      filterData: Headers,\n      filteredData: Data\n    };\n  }\n  render() {\n    const tabs = [{\n      title: 'Nodes',\n      element: /*#__PURE__*/_jsxDEV(Nodes, {\n        filteredData: this.state.filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }, this)\n    }, {\n      title: 'Tree',\n      element: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TabPopup, {\n        tabs: tabs,\n        actions: /*#__PURE__*/_jsxDEV(NodesActions, {\n          filterData: this.state.filterData,\n          onSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ClassificationTree;","map":{"version":3,"names":["React","Component","TabPopup","Nodes","NodesActions","Headers","Data","jsxDEV","_jsxDEV","Fragment","_Fragment","ClassificationTree","constructor","props","handleSearch","event","searchTerm","target","value","toLowerCase","state","typingTimeOut","clearTimeout","console","log","setState","searchValue","setTimeout","filteredData","data","filter","item","idMatch","id","includes","nameMatch","name","descriptionMatch","description","filterData","render","tabs","title","element","fileName","_jsxFileName","lineNumber","columnNumber","className","children","actions","onSearch"],"sources":["D:/Task/dashboard/src/assets/components/PopupComponents/ClassificationTree/ClassificationTree.js"],"sourcesContent":["import React, { Component } from 'react'\nimport TabPopup from '../BasicComponents/Tab/TabPopup'\nimport Nodes from '../Nodes/Nodes'\nimport './ClassificationTree.css'\nimport NodesActions from '../Nodes/NodesActions/NodesActions'\n\nimport { Headers } from '../Nodes/TableProps'\nimport { Data } from '../Nodes/DefaultProps'\n\nclass ClassificationTree extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            filterData: Headers,\n            filteredData: Data,\n        }\n    }\n\n    handleSearch = (event) => {\n        const searchTerm = event.target.value.toLowerCase()\n\n        if (this.state.typingTimeOut) {\n            clearTimeout(this.state.typingTimeOut)\n        }\n        console.log(event.target.value)\n\n        this.setState({\n            searchValue: event.target.value,\n            typingTimeOut: setTimeout(() => {\n                const filteredData = this.state.data.filter((item) => {\n                    // Check for search term in id.PatentId, title, abstract, and class.Name\n                    const idMatch = item.id.toLowerCase().includes(searchTerm)\n                    const nameMatch = item.name\n                        .toLowerCase()\n                        .includes(searchTerm)\n                    const descriptionMatch = item.description\n                        .toLowerCase()\n                        .includes(searchTerm)\n\n                    return idMatch || nameMatch || descriptionMatch\n                })\n\n                this.setState({ filteredData })\n                // this.handlePageChange(1)\n                console.log(searchTerm)\n            }, 500),\n        })\n    }\n\n    render() {\n        const tabs = [\n            {\n                title: 'Nodes',\n                element: <Nodes filteredData={this.state.filteredData} />,\n            },\n            {\n                title: 'Tree',\n                element: <></>,\n            },\n        ]\n        return (\n            <div className=\"container\">\n                <TabPopup\n                    tabs={tabs}\n                    actions={\n                        <NodesActions\n                            filterData={this.state.filterData}\n                            onSearch={this.handleSearch}\n                        />\n                    }\n                />\n            </div>\n        )\n    }\n}\n\nexport default ClassificationTree\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}