{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\dashboard\\\\src\\\\assets\\\\components\\\\PopupComponents\\\\Help\\\\Help.js\";\nimport React, { Component } from 'react';\n// import HeaderPopup from '../Header/HeaderPopup'\nimport { TabContext, TabPanel } from '@mui/lab';\nimport { Button, Box, Tab, Tabs } from '@mui/material';\nimport './Help.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Help extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '1',\n      documentation: {\n        heading: 'Creating a Classification tree',\n        steps: [{\n          title: 'Start with the Root Node',\n          description: 'Drag and drop the root node onto the canvas.'\n        }, {\n          title: 'Add Child Nodes to the Root Node',\n          description: 'Drag and drop a node from the left side onto the root node to create a child node.'\n        }, {\n          title: 'Add Child Nodes to Existing Child Nodes',\n          description: 'Drag and drop a node from the left side onto an existing child node to create a child of that node.'\n        }, {\n          title: 'Change Parent Nodes',\n          description: 'If you want to change the parent node of a child node, click on the edge of the line connecting the child to its current parent, then drag it to the new parent node you want to connect it to.'\n        }, {\n          title: 'Repeat the Process',\n          description: 'Continue dragging and dropping nodes to build out your classification tree.'\n        }]\n      }\n    };\n  }\n  render() {\n    const handleChange = (event, newValue) => {\n      this.setState({\n        ...this.state,\n        value: newValue\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          typography: 'body1'\n        },\n        children: /*#__PURE__*/_jsxDEV(TabContext, {\n          value: this.state.value,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              borderBottom: 1,\n              borderColor: 'divider',\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              onChange: handleChange\n              // textColor=\"black\"\n              ,\n              TabIndicatorProps: {\n                sx: {\n                  backgroundColor: '#022454',\n                  height: 4\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                sx: {\n                  textTransform: 'none'\n                },\n                label: \"Documentation\",\n                value: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                sx: {\n                  textTransform: 'none'\n                },\n                label: \"Video\",\n                value: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              children: \"Guide me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"heading\",\n              children: this.state.documentation.heading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), this.state.documentation.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: step.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: step.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: \"2\",\n            children: \"Item Two\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default Help;","map":{"version":3,"names":["React","Component","TabContext","TabPanel","Button","Box","Tab","Tabs","jsxDEV","_jsxDEV","Fragment","_Fragment","Help","constructor","props","state","value","documentation","heading","steps","title","description","render","handleChange","event","newValue","setState","children","sx","width","typography","borderBottom","borderColor","display","justifyContent","onChange","TabIndicatorProps","backgroundColor","height","textTransform","label","fileName","_jsxFileName","lineNumber","columnNumber","variant","className","map","step","index"],"sources":["D:/Task/dashboard/src/assets/components/PopupComponents/Help/Help.js"],"sourcesContent":["import React, { Component } from 'react'\n// import HeaderPopup from '../Header/HeaderPopup'\nimport { TabContext, TabPanel } from '@mui/lab'\nimport { Button, Box, Tab, Tabs } from '@mui/material'\nimport './Help.css'\n\nclass Help extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '1',\n            documentation: {\n                heading: 'Creating a Classification tree',\n                steps: [\n                    {\n                        title: 'Start with the Root Node',\n                        description:\n                            'Drag and drop the root node onto the canvas.',\n                    },\n                    {\n                        title: 'Add Child Nodes to the Root Node',\n                        description:\n                            'Drag and drop a node from the left side onto the root node to create a child node.',\n                    },\n                    {\n                        title: 'Add Child Nodes to Existing Child Nodes',\n                        description:\n                            'Drag and drop a node from the left side onto an existing child node to create a child of that node.',\n                    },\n                    {\n                        title: 'Change Parent Nodes',\n                        description:\n                            'If you want to change the parent node of a child node, click on the edge of the line connecting the child to its current parent, then drag it to the new parent node you want to connect it to.',\n                    },\n                    {\n                        title: 'Repeat the Process',\n                        description:\n                            'Continue dragging and dropping nodes to build out your classification tree.',\n                    },\n                ],\n            },\n        }\n    }\n    render() {\n        const handleChange = (event, newValue) => {\n            this.setState({ ...this.state, value: newValue })\n        }\n        return (\n            <>\n                {/*<HeaderPopup />*/}\n                <Box sx={{ width: '100%', typography: 'body1' }}>\n                    <TabContext value={this.state.value}>\n                        <Box\n                            sx={{\n                                borderBottom: 1,\n                                borderColor: 'divider',\n                                display: 'flex',\n                                justifyContent: 'space-between',\n                            }}\n                        >\n                            <Tabs\n                                onChange={handleChange}\n                                // textColor=\"black\"\n                                TabIndicatorProps={{\n                                    sx: {\n                                        backgroundColor: '#022454',\n                                        height: 4,\n                                    },\n                                }}\n                            >\n                                <Tab\n                                    sx={{\n                                        textTransform: 'none',\n                                    }}\n                                    label=\"Documentation\"\n                                    value=\"1\"\n                                />\n                                <Tab\n                                    sx={{ textTransform: 'none' }}\n                                    label=\"Video\"\n                                    value=\"2\"\n                                />\n                            </Tabs>\n                            <Button variant=\"contained\">Guide me</Button>\n                        </Box>\n                        <TabPanel value=\"1\">\n                            <p className=\"heading\">\n                                {this.state.documentation.heading}\n                            </p>\n                            {this.state.documentation.steps.map(\n                                (step, index) => (\n                                    <div>\n                                        <p>{step.title}</p>\n                                        <p>{step.description}</p>\n                                    </div>\n                                )\n                            )}\n                        </TabPanel>\n                        <TabPanel value=\"2\">Item Two</TabPanel>\n                    </TabContext>\n                </Box>\n            </>\n        )\n    }\n}\n\nexport default Help\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}