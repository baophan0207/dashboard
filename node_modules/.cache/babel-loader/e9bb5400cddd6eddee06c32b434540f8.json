{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\dashboard\\\\src\\\\assets\\\\components\\\\CommonComponents\\\\Layout\\\\ExpandableLayout.js\";\nimport React from \"react\";\nimport \"./StyleSheet.css\";\nimport Icon from \"../../../IconLibrary/Icon\";\nimport PropTypes from \"prop-types\";\nimport CreateButton from \"../BasicComponents/MainCTOButton/CreateButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ExpandableLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.expanderHandler = () => {\n      this.setState({\n        isExpand: !this.state.isExpand\n      });\n    };\n    this.state = {\n      isExpand: true\n    };\n  }\n  render() {\n    let {\n      width,\n      className,\n      backgroundColor,\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.state.isExpand ? \"expander-layout \" + className : \"expander-layout collapse \" + className,\n      style: {\n        width: width,\n        background: backgroundColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layout-expander\",\n        onClick: this.expanderHandler.bind(this),\n        style: {\n          left: this.state.isExpand ? \"calc(\" + width + \" - 1px)\" : 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: this.state.isExpand ? \"expander_show\" : \"expander_hide\",\n          className: \"layout-expander-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n}\nExpandableLayout.defaultProps = {\n  width: \"300px\",\n  backgroundColor: \"#f5f7f9\",\n  className: \"\"\n};\nExpandableLayout.propTypes = {\n  width: PropTypes.string,\n  className: PropTypes.string,\n  backgroundColor: PropTypes.string\n};","map":{"version":3,"names":["React","Icon","PropTypes","CreateButton","jsxDEV","_jsxDEV","ExpandableLayout","Component","constructor","props","expanderHandler","setState","isExpand","state","render","width","className","backgroundColor","children","style","background","onClick","bind","left","icon","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","propTypes","string"],"sources":["D:/Task/dashboard/src/assets/components/CommonComponents/Layout/ExpandableLayout.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./StyleSheet.css\";\r\nimport Icon from \"../../../IconLibrary/Icon\";\r\nimport PropTypes from \"prop-types\";\r\nimport CreateButton from \"../BasicComponents/MainCTOButton/CreateButton\";\r\n\r\nexport default class ExpandableLayout extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isExpand: true,\r\n        }\r\n    }\r\n\r\n    expanderHandler = () =>{\r\n        this.setState({\r\n            isExpand: !this.state.isExpand\r\n        })\r\n    }\r\n    render() {\r\n        let {width, className, backgroundColor, children} = this.props;\r\n        return (\r\n            <div className={this.state.isExpand?\r\n                \"expander-layout \"+className\r\n                :\r\n                \"expander-layout collapse \"+className}\r\n                 style={{width: width, background: backgroundColor}}>\r\n                <div className=\"layout-expander\"\r\n                     onClick={this.expanderHandler.bind(this)}\r\n                     style={{left: this.state.isExpand ? \"calc(\"+width+\" - 1px)\" : 0}}>\r\n                    <Icon\r\n                        icon={this.state.isExpand ? \"expander_show\" : \"expander_hide\"}\r\n                        className=\"layout-expander-icon\"/>\r\n                </div>\r\n\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nExpandableLayout.defaultProps = {\r\n    width: \"300px\",\r\n    backgroundColor: \"#f5f7f9\",\r\n    className: \"\"\r\n\r\n\r\n}\r\nExpandableLayout.propTypes = {\r\n    width: PropTypes.string,\r\n    className: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,YAAY,MAAM,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,eAAe,MAAMC,gBAAgB,SAASN,KAAK,CAACO,SAAS;EACzDC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAMjBC,eAAe,GAAG,MAAK;MACnB,IAAI,CAACC,QAAQ,CAAC;QACVC,QAAQ,EAAE,CAAC,IAAI,CAACC,KAAK,CAACD;MAC1B,CAAC,CAAC;IACN,CAAC;IATG,IAAI,CAACC,KAAK,GAAG;MACTD,QAAQ,EAAE;IACd,CAAC;EACL;EAOAE,MAAMA,CAAA,EAAG;IACL,IAAI;MAACC,KAAK;MAAEC,SAAS;MAAEC,eAAe;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACT,KAAK;IAC9D,oBACIJ,OAAA;MAAKW,SAAS,EAAE,IAAI,CAACH,KAAK,CAACD,QAAQ,GAC/B,kBAAkB,GAACI,SAAS,GAE5B,2BAA2B,GAACA,SAAU;MACrCG,KAAK,EAAE;QAACJ,KAAK,EAAEA,KAAK;QAAEK,UAAU,EAAEH;MAAe,CAAE;MAAAC,QAAA,gBACpDb,OAAA;QAAKW,SAAS,EAAC,iBAAiB;QAC3BK,OAAO,EAAE,IAAI,CAACX,eAAe,CAACY,IAAI,CAAC,IAAI,CAAE;QACzCH,KAAK,EAAE;UAACI,IAAI,EAAE,IAAI,CAACV,KAAK,CAACD,QAAQ,GAAG,OAAO,GAACG,KAAK,GAAC,SAAS,GAAG;QAAC,CAAE;QAAAG,QAAA,eAClEb,OAAA,CAACJ,IAAI;UACDuB,IAAI,EAAE,IAAI,CAACX,KAAK,CAACD,QAAQ,GAAG,eAAe,GAAG,eAAgB;UAC9DI,SAAS,EAAC;QAAsB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EAELV,QAAQ;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEd;AACJ;AAIAtB,gBAAgB,CAACuB,YAAY,GAAG;EAC5Bd,KAAK,EAAE,OAAO;EACdE,eAAe,EAAE,SAAS;EAC1BD,SAAS,EAAE;AAGf,CAAC;AACDV,gBAAgB,CAACwB,SAAS,GAAG;EACzBf,KAAK,EAAEb,SAAS,CAAC6B,MAAM;EACvBf,SAAS,EAAEd,SAAS,CAAC6B,MAAM;EAC3Bd,eAAe,EAAEf,SAAS,CAAC6B;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}