{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\dashboard\\\\src\\\\assets\\\\components\\\\PopupComponents\\\\Help\\\\Help.js\";\nimport React, { Component } from 'react';\nimport { TabContext, TabPanel, TabList } from '@mui/lab';\nimport { Button, Box, Tab } from '@mui/material';\nimport './Help.css';\n\n// import ReactPlayer from 'react-player'\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\nimport Documentation from '../Documentation/Documentation';\nimport TabPopup from '../Tab/TabPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Help extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '1',\n      documentation: {\n        heading: 'Creating a Classification tree',\n        steps: [{\n          title: 'Start with the Root Node',\n          description: 'Drag and drop the root node onto the canvas.'\n        }, {\n          title: 'Add Child Nodes to the Root Node',\n          description: 'Drag and drop a node from the left side onto the root node to create a child node.'\n        }, {\n          title: 'Add Child Nodes to Existing Child Nodes',\n          description: 'Drag and drop a node from the left side onto an existing child node to create a child of that node.'\n        }, {\n          title: 'Change Parent Nodes',\n          description: 'If you want to change the parent node of a child node, click on the edge of the line connecting the child to its current parent, then drag it to the new parent node you want to connect it to.'\n        }, {\n          title: 'Repeat the Process',\n          description: 'Continue dragging and dropping nodes to build out your classification tree.'\n        }]\n      },\n      videoUrl: 'https://www.w3schools.com/html/mov_bbb.mp4'\n    };\n  }\n  render() {\n    const handleChange = (event, newValue) => {\n      this.setState({\n        value: newValue\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"help-container\",\n      children: /*#__PURE__*/_jsxDEV(TabPopup, {\n        children: [/*#__PURE__*/_jsxDEV(Documentation, {\n          documentation: this.state.documentation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          videoUrl: this.state.videoUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Help;","map":{"version":3,"names":["React","Component","TabContext","TabPanel","TabList","Button","Box","Tab","VideoPlayer","Documentation","TabPopup","jsxDEV","_jsxDEV","Help","constructor","props","state","value","documentation","heading","steps","title","description","videoUrl","render","handleChange","event","newValue","setState","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Task/dashboard/src/assets/components/PopupComponents/Help/Help.js"],"sourcesContent":["import React, { Component } from 'react'\n\nimport { TabContext, TabPanel, TabList } from '@mui/lab'\nimport { Button, Box, Tab } from '@mui/material'\n\nimport './Help.css'\n\n// import ReactPlayer from 'react-player'\nimport VideoPlayer from '../VideoPlayer/VideoPlayer'\nimport Documentation from '../Documentation/Documentation'\nimport TabPopup from '../Tab/TabPopup'\n\nclass Help extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '1',\n            documentation: {\n                heading: 'Creating a Classification tree',\n                steps: [\n                    {\n                        title: 'Start with the Root Node',\n                        description:\n                            'Drag and drop the root node onto the canvas.',\n                    },\n                    {\n                        title: 'Add Child Nodes to the Root Node',\n                        description:\n                            'Drag and drop a node from the left side onto the root node to create a child node.',\n                    },\n                    {\n                        title: 'Add Child Nodes to Existing Child Nodes',\n                        description:\n                            'Drag and drop a node from the left side onto an existing child node to create a child of that node.',\n                    },\n                    {\n                        title: 'Change Parent Nodes',\n                        description:\n                            'If you want to change the parent node of a child node, click on the edge of the line connecting the child to its current parent, then drag it to the new parent node you want to connect it to.',\n                    },\n                    {\n                        title: 'Repeat the Process',\n                        description:\n                            'Continue dragging and dropping nodes to build out your classification tree.',\n                    },\n                ],\n            },\n            videoUrl: 'https://www.w3schools.com/html/mov_bbb.mp4',\n        }\n    }\n    render() {\n        const handleChange = (event, newValue) => {\n            this.setState({ value: newValue })\n        }\n        return (\n            <Box className=\"help-container\">\n                {/*<TabContext value={this.state.value}>*/}\n                {/*    <Box*/}\n                {/*        sx={{*/}\n                {/*            borderBottom: 1,*/}\n                {/*            display: 'flex',*/}\n                {/*            justifyContent: 'space-between',*/}\n                {/*        }}*/}\n                {/*    >*/}\n                {/*        <TabList*/}\n                {/*            onChange={handleChange}*/}\n                {/*            TabIndicatorProps={{*/}\n                {/*                style: {*/}\n                {/*                    backgroundColor: '#000',*/}\n                {/*                },*/}\n                {/*            }}*/}\n                {/*            sx={{*/}\n                {/*                fontSize: '14px',*/}\n                {/*                '& button': {*/}\n                {/*                    minWidth: '200px',*/}\n                {/*                    textTransform: 'none',*/}\n                {/*                },*/}\n                {/*                '& button.Mui-selected': {*/}\n                {/*                    color: 'black',*/}\n                {/*                    fontWeight: 700,*/}\n                {/*                },*/}\n                {/*            }}*/}\n                {/*        >*/}\n                {/*            <Tab label=\"Documentation\" value=\"1\" />*/}\n                {/*            <Tab label=\"Video\" value=\"2\" />*/}\n                {/*        </TabList>*/}\n                {/*        <Button className=\"guide-btn\">Guide me</Button>*/}\n                {/*    </Box>*/}\n                {/*    <TabPanel value=\"1\" sx={{ padding: '0' }}>*/}\n                {/*        <Documentation*/}\n                {/*            documentation={this.state.documentation}*/}\n                {/*        />*/}\n                {/*    </TabPanel>*/}\n                {/*    <TabPanel value=\"2\" sx={{ padding: '0' }}>*/}\n                {/*        <VideoPlayer videoUrl={this.state.videoUrl} />*/}\n                {/*    </TabPanel>*/}\n                {/*</TabContext>*/}\n                <TabPopup>\n                    <Documentation documentation={this.state.documentation} />\n                    <VideoPlayer videoUrl={this.state.videoUrl} />\n                </TabPopup>\n            </Box>\n        )\n    }\n}\n\nexport default Help\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,UAAU;AACxD,SAASC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAQ,eAAe;AAEhD,OAAO,YAAY;;AAEnB;AACA,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,QAAQ,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,SAASZ,SAAS,CAAC;EACzBa,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,GAAG;MACVC,aAAa,EAAE;QACXC,OAAO,EAAE,gCAAgC;QACzCC,KAAK,EAAE,CACH;UACIC,KAAK,EAAE,0BAA0B;UACjCC,WAAW,EACP;QACR,CAAC,EACD;UACID,KAAK,EAAE,kCAAkC;UACzCC,WAAW,EACP;QACR,CAAC,EACD;UACID,KAAK,EAAE,yCAAyC;UAChDC,WAAW,EACP;QACR,CAAC,EACD;UACID,KAAK,EAAE,qBAAqB;UAC5BC,WAAW,EACP;QACR,CAAC,EACD;UACID,KAAK,EAAE,oBAAoB;UAC3BC,WAAW,EACP;QACR,CAAC;MAET,CAAC;MACDC,QAAQ,EAAE;IACd,CAAC;EACL;EACAC,MAAMA,CAAA,EAAG;IACL,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;MACtC,IAAI,CAACC,QAAQ,CAAC;QAAEX,KAAK,EAAEU;MAAS,CAAC,CAAC;IACtC,CAAC;IACD,oBACIf,OAAA,CAACN,GAAG;MAACuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eA0C3BlB,OAAA,CAACF,QAAQ;QAAAoB,QAAA,gBACLlB,OAAA,CAACH,aAAa;UAACS,aAAa,EAAE,IAAI,CAACF,KAAK,CAACE;QAAc;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1DtB,OAAA,CAACJ,WAAW;UAACe,QAAQ,EAAE,IAAI,CAACP,KAAK,CAACO;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEd;AACJ;AAEA,eAAerB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}